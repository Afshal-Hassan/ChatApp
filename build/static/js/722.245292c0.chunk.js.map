{"version":3,"file":"static/js/722.245292c0.chunk.js","mappings":"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","sources":["api/APIUrl.js","services/MessagesService.js","components/Message/MessageHeader.jsx","components/Message/Message.jsx"],"sourcesContent":["export const FriendListAPI = (user) => {\r\n   return `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}/all-friends/of-user/${user}`;\r\n};\r\n\r\nexport const PrivateRoomKey = (firstUserEmail, secondUserEmail) => {\r\n   return `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}/private-room/key/${firstUserEmail}/${secondUserEmail}`\r\n};\r\n\r\nexport const GetMessagesURL = (sender,receiver) => {\r\n   return `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}/messages/${sender}/${receiver}`;\r\n}","import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\"\r\nimport { GetMessagesURL } from \"../api/APIUrl\";\r\n\r\n\r\nconst MessageService = () => {\r\n    const [messagesData, setMessages] = useState([]);\r\n\r\n    const getMessages =  useCallback(async(sender,receiver) => {\r\n        const { data } = await axios.get(GetMessagesURL(sender,receiver));\r\n        setMessages(data.data);\r\n        return data.data\r\n    },[messagesData]);\r\n    \r\n    return [getMessages];\r\n};\r\n\r\nexport default MessageService;","import React, { memo, useEffect } from 'react';\r\nimport Chat from \"./Chat.png\";\r\nimport { Typography } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport \"./Message.css\";\r\n\r\nfunction MessageHeader(props) {\r\n    const messageComponentHeading = useSelector((state) => state.changeTheMessageComponentHeaderReducer);\r\n    \r\n  return (\r\n    <div className='friend-data-container'>\r\n    <img src={Chat} className=\"friend-pic\" alt='friend-pic'/>\r\n    <Typography className='friend-message-name'>{messageComponentHeading.messageHeading.charAt(0).toUpperCase() + messageComponentHeading.messageHeading.slice(1)}</Typography>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default memo(MessageHeader)","import { Container, Input, Modal, Typography } from '@mui/material';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport io from \"socket.io-client\";\r\nimport \"./Message.css\";\r\nimport {  useSelector } from 'react-redux';\r\nimport AddReactionIcon from '@mui/icons-material/AddReaction';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport { Box } from '@mui/system';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport MessageService from '../../services/MessagesService';\r\nimport PersonalVideoIcon from '@mui/icons-material/PersonalVideo';\r\nimport  { Link, useHistory,Redirect }  from \"react-router-dom\"\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport SpeechRecognition,{ useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nimport MessageHeader from './MessageHeader';\r\n\r\nconst socket=io(`${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}`)\r\n\r\n\r\n\r\nfunction Message() {\r\n  let isReloaded= JSON.parse(localStorage.getItem(\"isReloaded\"));\r\n  const commands = [\r\n    {\r\n      command:[\"Go to *\",\"Open for *\",\"I want a *\"],\r\n      callback: (redirectPage) => setRedirectUrl(redirectPage),\r\n    },\r\n  ]\r\n\r\n  const[redirectUrl, setRedirectUrl] = useState(\"\");\r\n  const navigate = useHistory();\r\n  const { transcript } = useSpeechRecognition({commands});\r\n\r\n\r\n  const [getMessages] = MessageService();\r\n   const scrollRef = useRef();\r\n  const messageComponentHeading = useSelector((state) => state.changeTheMessageComponentHeaderReducer);\r\n  const  privateRoomKey = useSelector((state) => state.changeThePrivateRoomKey);\r\n  const senderAndReciverData = useSelector((state) => state.senderAndReceiverReducer);\r\n  const[message,setMessage]=useState(\"\");\r\n  const[emojiPicker,setEmojiPicker] = useState(false);\r\n  const [messagesData ,setMessagesData] = useState([]);\r\n  const[arrivalMessage,setArrivalMessage] = useState(null);\r\n  const[emojiModelOpen,setEmojiModalOpen] = useState(false);\r\n\r\n\r\n\r\n\r\nconst pages = [\"home\",\"videocall\"];\r\n\r\nconst urls = {\r\n  home: \"/\" ,\r\n  videocall:\"/video\"\r\n}\r\n\r\n\r\n  if(redirectUrl){\r\n\r\n      let redirect= redirectUrl.slice(0,-1);\r\n      redirect =  redirect.replace(/\\s/g, '');\r\n      if(pages.includes(redirect)){\r\n        navigate.push(`${urls[redirect]}`)\r\n      }else{\r\n       console.log(\"Page Not Found\");\r\n      }\r\n      \r\n    \r\n  }\r\n  \r\n\r\n  const onChangeMessage = (event) => {\r\n    setMessage(event.target.value);\r\n  }\r\n\r\n  const modalEmojiOpener = () => {\r\n    setEmojiModalOpen(true);\r\n  }\r\n  const modalEmojiCloser = () => {\r\n    setEmojiPicker(false);\r\n   setEmojiModalOpen(false);\r\n  }\r\n  \r\n  const onEmojiClick = (emojiObject,event) => {\r\n    console.log(emojiObject);\r\n    setMessage(prevInput => prevInput + emojiObject.emoji);\r\n    \r\n    setEmojiPicker(false);\r\n    setEmojiModalOpen(false);\r\n  }\r\n  const joinRoom = async() => {\r\n    if(privateRoomKey.roomId != 0){\r\n      socket.emit(\"join-room\",privateRoomKey.roomId);\r\n      const messagesResponse = await getMessages(senderAndReciverData.sender,senderAndReciverData.receiver);\r\n      setMessagesData(messagesResponse);\r\n      \r\n    }\r\n  }\r\n\r\n  const sendMessageByEnter = (event) => {\r\n    if(event.key === \"Enter\"){\r\n      sendMessage();\r\n    }\r\n  }\r\n\r\n const chooseFile = (event) => {\r\n  const file = event.target.files[0];\r\n\r\n  var fileReader = new FileReader();\r\n  fileReader.readAsDataURL(file);\r\n  \r\n  fileReader.onload = () => {\r\n   console.log(fileReader.result);\r\n  }\r\n  \r\n }\r\n\r\n  const sendMessage= ()=>{\r\n    if(message.includes('http')){\r\n      setMessagesData([...messagesData,{email:senderAndReciverData.sender, messages:message}]);\r\n      socket.emit(\"send-message\",{message:message , room:privateRoomKey.roomId});\r\n    \r\n    }else{\r\n      setMessagesData([...messagesData,{email:senderAndReciverData.sender, messages:message}]);\r\n      socket.emit(\"send-message\",{message:message , room:privateRoomKey.roomId ,messageSender:senderAndReciverData.sender, messageReceiver:senderAndReciverData.receiver});\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const receiveMessage = () => {\r\n    socket.off(\"receive-message\").on(\"receive-message\",(data)=>{\r\n      if(data.message.includes(\"http\")){\r\n        setArrivalMessage({email:senderAndReciverData.receiver, messages:data.message});\r\n      }else{\r\n        setArrivalMessage({email:senderAndReciverData.receiver, messages:data.message});\r\n      }\r\n     \r\n    },[socket]);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    joinRoom();\r\n    receiveMessage();\r\n  },[privateRoomKey]);\r\n\r\n  useEffect(()=>{\r\n    scrollRef.current?.scrollIntoView({behaviour:\"smooth\"});\r\n     document.getElementById('message-area').scrollTop = document.getElementById('message-area').scrollHeight;\r\n  },[messagesData])\r\n\r\n  useEffect(()=>{\r\n    arrivalMessage && setMessagesData([...messagesData,arrivalMessage])\r\n  },[arrivalMessage]);\r\n\r\n  useEffect(()=>{\r\n      if(isReloaded === false){\r\n        window.location.reload();\r\n        console.log(\"YES\");\r\n        localStorage.setItem(\"isReloaded\",JSON.stringify(true));\r\n      }\r\n  })\r\n\r\n  return (\r\n    <div className='message-component-module'>\r\n      <Container className='message-component-container'>\r\n       <MessageHeader/>\r\n        <Container className='messages-data' id='message-area'>\r\n          {messagesData && messagesData.map((m,i) =>  m.email === senderAndReciverData.sender  ?  !m.messages.includes(\"jpeg\") ? (<div className='outgoing-messsages' key={i}>{m.messages}</div>) :(<img src={m.messages} key={i} className=\"outgoing-images\"/>) : !m.messages.includes('jpeg') ? (<div className='incoming-messsages' key={i}>{m.messages}</div>) :  (<img src={m.messages} key={i} className=\"incoming-images\"/>)\r\n          )}\r\n        </Container>\r\n        <Container className='message-send'>\r\n        \r\n          <Input className='type-messages' value={message} placeholder='Type Something' onChange={onChangeMessage} disableUnderline={true} autoFocus= {true} onKeyUp={sendMessageByEnter} />\r\n          <label htmlFor='image-upload'><ImageIcon id='image-upload-icon'/></label>\r\n          <input type='file' id='image-upload' onChange={chooseFile} accept=\"image/png, image/jpeg,.txt,.doc\"/>\r\n          <AddReactionIcon className='insert-emoji' onClick = {() => {\r\n            setEmojiPicker(val => !val);\r\n            modalEmojiOpener();   \r\n          }}/>\r\n          <Modal open={emojiModelOpen}>\r\n            <div className='modal-box' onClick={modalEmojiCloser}>\r\n            <Box>  \r\n          {emojiPicker && <EmojiPicker\r\n          emojiStyle='google'\r\n          onEmojiClick={onEmojiClick}\r\n          />}\r\n            </Box>\r\n            </div>\r\n          </Modal>\r\n          <Link to=\"/video\"><PersonalVideoIcon className=\"video-icon\"/></Link>\r\n          <MicIcon onClick={SpeechRecognition.startListening} className=\"voice-recog-icon\"/>\r\n          <SendIcon className='send-btn'  onClick={sendMessage}/> \r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message"],"names":["FriendListAPI","user","process","PrivateRoomKey","firstUserEmail","secondUserEmail","GetMessagesURL","sender","receiver","useState","messagesData","setMessages","getMessages","useCallback","axios","data","MessageHeader","props","messageComponentHeading","useSelector","state","changeTheMessageComponentHeaderReducer","className","src","alt","Typography","messageHeading","charAt","toUpperCase","slice","memo","socket","io","isReloaded","JSON","parse","localStorage","getItem","commands","command","callback","redirectPage","setRedirectUrl","redirectUrl","navigate","useHistory","useSpeechRecognition","transcript","MessageService","scrollRef","useRef","privateRoomKey","changeThePrivateRoomKey","senderAndReciverData","senderAndReceiverReducer","message","setMessage","emojiPicker","setEmojiPicker","setMessagesData","arrivalMessage","setArrivalMessage","emojiModelOpen","setEmojiModalOpen","redirect","replace","includes","push","home","videocall","console","log","joinRoom","roomId","emit","messagesResponse","sendMessage","email","messages","room","messageSender","messageReceiver","useEffect","off","on","current","scrollIntoView","behaviour","document","getElementById","scrollTop","scrollHeight","window","location","reload","setItem","stringify","Container","id","map","m","i","Input","value","placeholder","onChange","event","target","disableUnderline","autoFocus","onKeyUp","key","htmlFor","Image","type","file","files","fileReader","FileReader","readAsDataURL","onload","result","accept","AddReaction","onClick","val","Modal","open","Box","emojiStyle","onEmojiClick","emojiObject","prevInput","emoji","to","PersonalVideo","Mic","SpeechRecognition","Send"],"sourceRoot":""}