{"version":3,"file":"static/js/385.8eadf885.chunk.js","mappings":"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","sources":["api/APIUrl.js","services/FetchFriends.js","redux/actions/PrivateRoomKeyAction.js","redux/actions/SenderAndReceiverAction.js","redux/actions/MessageHeaderAction.js","services/PrivateRoomKeyService.js","components/FriendList/FriendList.jsx"],"sourcesContent":["export const FriendListAPI = (user) => {\r\n   return `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}/all-friends/of-user/${user}`;\r\n};\r\n\r\nexport const PrivateRoomKey = (firstUserEmail, secondUserEmail) => {\r\n   return `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}/private-room/key/${firstUserEmail}/${secondUserEmail}`\r\n};\r\n\r\nexport const GetMessagesURL = (sender,receiver) => {\r\n   return `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}/messages/${sender}/${receiver}`;\r\n}","import { useState,useCallback } from \"react\";\r\nimport { FriendListAPI } from \"../api/APIUrl\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst FetchFriends = () => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n    \r\n    const fetchFriendsOfUser = useCallback(async (user) => {\r\n        const { data } = await axios.get(FriendListAPI(user));\r\n        setFriends(data.data);\r\n      }, [friends]);\r\n\r\n  return [friends,fetchFriendsOfUser];\r\n\r\n};\r\n\r\nexport default FetchFriends;","export const changeThePrivateRoomKey = (data) => {\r\n    return {\r\n        type: \"CHANGE_THE_PRIVATE_ROOM_KEY\",\r\n        data: data\r\n    }\r\n}","export const senderAndReceiverAction = (data) => {\r\n    return {\r\n        type: \"SET_SENDER_AND_RECEIVER\",\r\n        data: data\r\n    }\r\n}","export const changeTheMessageComponentHeaderAction = (data) => {\r\n    return {\r\n        type: \"CHANGE_THE_MESSAGE_HEADER\",\r\n        data: data\r\n    }\r\n}","import axios from \"axios\";\r\nimport { useCallback } from \"react\";\r\nimport { PrivateRoomKey } from \"../api/APIUrl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeThePrivateRoomKey } from \"../redux/actions/PrivateRoomKeyAction.js\";\r\nimport { senderAndReceiverAction } from \"../redux/actions/SenderAndReceiverAction\";\r\nimport {changeTheMessageComponentHeaderAction} from \"../redux/actions/MessageHeaderAction\";\r\n\r\nconst FetchPrivateRoomKey = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchPrivateRoomKey = useCallback(async(firstUserEmail , secondUserEmail,friendName) => {\r\n        const { data } = await axios.get(PrivateRoomKey(firstUserEmail, secondUserEmail));\r\n        dispatch(changeThePrivateRoomKey(data.data[0].room_id));\r\n        dispatch(senderAndReceiverAction({sender:firstUserEmail,receiver:secondUserEmail}));\r\n        dispatch(changeTheMessageComponentHeaderAction(friendName))\r\n    });\r\n    return [fetchPrivateRoomKey];\r\n};\r\n\r\nexport default FetchPrivateRoomKey;","import React, { useEffect, useState } from \"react\";\r\nimport \"./FriendList.css\";\r\nimport Chat from \"./Chat.png\";\r\nimport { Container, Input, Typography } from \"@mui/material\";\r\nimport FetchFriends from \"../../services/FetchFriends\";\r\nimport FetchPrivateRoomKey from \"../../services/PrivateRoomKeyService\";\r\n\r\nfunction FriendList() {\r\n  const [friends, fetchFriendsOfUser] = FetchFriends();\r\n  const [fetchPrivateRoomKey] = FetchPrivateRoomKey();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const firstUserEmail =localStorage.getItem(\"email\");\r\n  \r\n  const onSearch = (event) => {\r\n      setSearchValue(event.target.value);\r\n  }\r\n \r\n  useEffect(() => {\r\n    fetchFriendsOfUser(firstUserEmail);    \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"friend-list-module\">\r\n      <Container className=\"friend-list-container\">\r\n        <div className=\"friend-list-header\">\r\n          <img src={Chat} className=\"chat-logo\" alt=\"ChatLogo\" />\r\n          <Typography className=\"friend-list-heading\">Messenger</Typography>\r\n        </div>\r\n        <div className=\"friend-list\">\r\n        <Input disableUnderline={true} className=\"search-friends\" placeholder=\"Search\" onChange={onSearch}/>\r\n          <div className=\"friend-content\">\r\n          {searchValue == \"\" ? friends.map((friend) => {\r\n            return (\r\n              <div className=\"friend-list-data\" key={friend[0].user_id} onClick = {async() => {\r\n                fetchPrivateRoomKey(firstUserEmail,friend[0].email,friend[0].name);       \r\n              }}>\r\n\r\n                <img className=\"friend-image\" alt=\"FriendImage\" src={Chat} />\r\n                <Typography className=\"friend-name\">{friend[0].name}</Typography>\r\n                <div className=\"message-div-curve\"></div>\r\n                <div className=\"message-div-curve-right\"></div>\r\n              </div>\r\n            );\r\n          }) : friends.filter((friend)=>{\r\n            if(friend[0].name.toLocaleUpperCase().indexOf(searchValue.toLocaleUpperCase()) > -1){\r\n              return friend[0].name;\r\n            }\r\n        }).map((friend) => {\r\n          return (\r\n            <div className=\"friend-list-data\" key={friend[0].user_id} onClick = {async() => {\r\n              fetchPrivateRoomKey(firstUserEmail,friend[0].email,friend[0].name);      \r\n            }}>\r\n\r\n              <img className=\"friend-image\" alt=\"FriendImage\" src={Chat} />\r\n              <Typography className=\"friend-name\">{friend[0].name}</Typography>\r\n              <div className=\"message-div-curve\"></div>\r\n              <div className=\"message-div-curve-right\"></div>\r\n            </div>\r\n          );\r\n        })}\r\n        </div>\r\n       \r\n        </div>\r\n    \r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n"],"names":["FriendListAPI","user","process","PrivateRoomKey","firstUserEmail","secondUserEmail","GetMessagesURL","sender","receiver","useState","friends","setFriends","fetchFriendsOfUser","useCallback","axios","data","changeThePrivateRoomKey","type","senderAndReceiverAction","changeTheMessageComponentHeaderAction","dispatch","useDispatch","fetchPrivateRoomKey","friendName","room_id","FetchFriends","FetchPrivateRoomKey","searchValue","setSearchValue","localStorage","getItem","useEffect","className","Container","src","Chat","alt","Typography","Input","disableUnderline","placeholder","onChange","event","target","value","map","friend","onClick","email","name","user_id","filter","toLocaleUpperCase","indexOf"],"sourceRoot":""}